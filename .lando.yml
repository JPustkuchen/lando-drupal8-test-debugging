#https://github.com/JPustkuchen/lando-drupal8-test-debugging
name: drupal8phpunit
# https://docs.devwithlando.io/tutorials/drupal8.html
recipe: drupal8

# Requires lando 3.0.0-rc2 or higher.
# You can put local (non-git) overrides in .lando.local.yml

# Add some default configuration for the recipe here. Which will be passed to all the services within the recipe.
# https://docs.devwithlando.io/recipes/drupal8.html
config:
  # Set the webserver
  via: apache
  # Set the php version.
  php: 7.3
  # Set the webroot dir.
  webroot: web
  # Enable xdebug using "lando xdebug-on" tooling defined below.
  xdebug: true
  # Database
  database: mariadb
  # Drush
  drush: ^10

# We can add additional services here or even override some configuration.
services:
  appserver:
    run:
      - 'bash config/init.sh'
    overrides:
      environment:
        # Enable PHPStorm XDebug with CLI.
        PHP_IDE_CONFIG: "serverName=appserver"
        # Set the Mink webdriver args.
        MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", null, "http://host.docker.internal:4444/wd/hub"]'
      volumes:
          # Fix linux docker host.docker.internal resolving.
        - 'config/linux-hosts.sh:/scripts/linux-hosts.sh'
  database:
    # Add a static db port for easy bookmarking and access through SQL clients.
    # Ideally you would set this in a .lando.local.yml.
    portforward: 33006
  mailhog:
    type: mailhog
    portforward: true
    hogfrom:
      - appserver

# This will add some tools from the containers to the command line of your OS.
# https://docs.devwithlando.io/config/tooling.html
tooling:
  phpunit:
    service: appserver
    description: "Run PHP Unit tests: lando phpunit"
    cmd: "/app/web/vendor/bin/phpunit --debug --configuration /app/web/core/phpunit.xml --printer=\\Drupal\\Tests\\Listeners\\HtmlOutputPrinter"
  drush:
    cmd: "/app/web/vendor/bin/drush --root=/app/web --uri=http://drupal8phpunit.lndo.site"
  drupal:
    cmd: "/app/web/vendor/bin/drupal --root=/app/web"
  xdebug-on:
    service: appserver
    description: Enable xdebug.
    cmd: "docker-php-ext-enable xdebug && /etc/init.d/apache2 reload"
    user: root
  xdebug-off:
    service: appserver
    description: Disable xdebug.
    cmd: "rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && /etc/init.d/apache2 reload"
    user: root
